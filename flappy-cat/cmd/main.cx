package main

import "gl"
import "glfw"

// *****************************************************************************
// WINDOW SETTING AND OPENGL SETTINGS
// *****************************************************************************
func initGlfw (mw Window) {
    glfw.Init()
    glfw.WindowHint(glfw.Resizable, glfw.False)
    glfw.CreateWindow("window", mw.Width, mw.Height, "Flappy Cat")
    glfw.MakeContextCurrent("window")
    glfw.SetKeyCallback("window", "keyboardManager")
}

func initOpenGL() (program i32) {
    gl.Init()
    gl.Enable(gl.BLEND)
    gl.BlendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)
    program = gl.CreateProgram()
    gl.LinkProgram(program)
}


// *****************************************************************************
// KEYBOARD EVENTS - http://www.glfw.org/docs/latest/group__keys.html
// *****************************************************************************
func keyboardManager(window str, key i32, scancode i32, action i32, mods i32) () {
  // SPACEBAR == 32 and UP KEY == 265
  if key == 32 && action == 1 || key == 265 && action == 1 {
      g_bird.vy = 0.02
  }
}

// *****************************************************************************
// HELPER FUNCTIONS
// *****************************************************************************

// Random Number between 0.3 to 1.3
func randNumGenerator() (rNum f32){
    rNum = f32.div(i32.f32(i32.rand(3, 13)), 10.0)
}

// *****************************************************************************
// MAIN FUNCTION
// *****************************************************************************

func main() {
  var window Window
  window = Window{Height: 748, Width: 1024}

  initGlfw(window)
  var program i32
	program = initOpenGL()

  g_game = NewGame()

  for bool.not(glfw.ShouldClose("window")) {
    gl.UseProgram(program)
    gl.ClearColor(0.0, 0.0, 0.0, 1.0)
    gl.Clear(gl.COLOR_BUFFER_BIT)
    gl.Enable(gl.TEXTURE_2D)

    g_game = UpdateGame(g_game)
    RenderGame(g_game)

    glfw.PollEvents()
    glfw.SwapBuffers("window")
  }
}
