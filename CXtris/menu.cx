package main

import "menu"



// options 
var ShowNextShape     bool = true
var ShowNextShapeText str  = "Show next shape: "
var SpeedText         str  = "Speed"
var DebrisHeightText  str  = "Debris height"
var DebrisHeight      i32  = 9



func menuInit () {
 	// app.MODE_MENU_MAIN
 	menu.MakeItem(0, menu.MainSize, menu.ItemPlay)
 	menu.MakeItem(0, menu.MainSize, menu.ItemOptions)
 	menu.MakeItem(0, menu.MainSize, menu.ItemControls)
 	menu.MakeItem(0, menu.MainSize, menu.ItemQuit)

	// app.MODE_MENU_OPTIONS
 	menu.MakeItem(1, menu.OptionsSize, ShowNextShapeText + "YES")
 	menu.MakeItem(1, menu.OptionsSize, SpeedText)
 	menu.MakeItem(1, menu.OptionsSize, DebrisHeightText)
	// app.MODE_MENU_CONTROLS (no items, just a mode for drawing) 
 	menu.MakeItem(2, menu.OptionsSize, "")

	// sliders (the only items that use these fields) 
	menu.Items[1][1].Max   = DROP_SPEED_MAX
	menu.Items[1][1].Value = DropSpeed
	menu.Items[1][2].Max   = 11 // for debris height 
	menu.Items[1][2].Value = DebrisHeight

	menu.BakeItemText()
}


func respondToMenuDrags () {
	var s str
	var i i32
	s, i = menu.GetHoveredItem(app.Mode)

	/*
	if s == menu.ItemText {
		menu.Setting = menu.SetSliderValue(i, f64.f32(MousePosInPixels.X))
	} else
	*/
	if s == DebrisHeightText {
		DebrisHeight = menu.SetSliderValue(i, f64.f32(inputs.MousePosInPixels.X))
		startNewGameSession()
	} else
	if s == SpeedText {
		DropSpeed =    menu.SetSliderValue(i, f64.f32(inputs.MousePosInPixels.X))
		CalcDropTime()
	}
}


func respondToMenuClicks () {
	var s str
	var i i32
	s, i = menu.GetHoveredItem(app.Mode)

	if s == menu.ItemPlay {
		inputs.UseMousePointer(false)
		shape.PlayerScore    =  0
		shape.PlayerScoreTxt = "0"
		startNewGameSession()
		app.Mode = app.MODE_PLAYING
	} else
	if s == menu.ItemOptions {
		app.Mode = app.MODE_MENU_OPTIONS
	} else
	if s == menu.ItemControls {
		app.Mode = app.MODE_MENU_CONTROLS
	} else
	if s == menu.ItemQuit {
		glfw.SetShouldClose(app.Name, true)
	} else
	if s == ShowNextShapeText + "YES" {
		    ShowNextShape = false
		menu.Items[app.Mode][i].Text = ShowNextShapeText + "NO"
	} else
	if s == ShowNextShapeText + "NO" {
		    ShowNextShape = true
		menu.Items[app.Mode][i].Text = ShowNextShapeText + "YES"
	}
}
