/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
/////////////////////             ///////////////////
/////////////////////     APP     ///////////////////
/////////////////////             ///////////////////
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
///////  Things ALL apps/games might access  ////////
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////

package app



// FIXME when CX gets constants 
var START_WIDTH  i32 = 1280
var START_HEIGHT i32 = 720
var MAX_I32      i32 = 2147483647
var TOO_BIG_F32  f32 = 999777.999777

var Name     str
var Controls str


// modes 
var MODE_MENU_MAIN     i32
var MODE_MENU_OPTIONS  i32 = 1
var MODE_MENU_CONTROLS i32 = 2
var MODE_MENU_MAX      i32 = 3 // anything < this == open menu 
var MODE_PLAYING       i32 = 4
var MODE_GAME_OVER     i32 = 5
var MODE_MAX           i32 = 6
var Mode               i32 = MODE_MENU_MAIN


type Vec2I struct {
	X i32
	Y i32
}

type Vec2F64 struct {
	X f64
	Y f64
}

type Vec2 struct {
	X f32
	Y f32
}



func Init (name str, controls str) {
	str.print("app.Init ()")
	Name = name
	Controls = controls
	CliIntro()
	showWorkHoursNeeded() // calculate CorpusC's current daily goal 
}


func CliIntro () {
	printf("\n%s \n\n%s \n\n", Name, Controls)
}


func showWorkHoursNeeded () {
	// current "workmonth" (pay period) goes from the 5th to the 4th of following month 
	var today       i32 = 28 // day of current month 
	var hoursWorked f32 = 26.5

	var hoursGoal   f32 = 60.0 // ...to work this month (pay period) 
	var daysInMonth i32 = 30 // current month that majority of days are in 
	
	
	var daysLeft    i32 = daysInMonth - today + 4
	var hoursLeft   f32 = hoursGoal - hoursWorked
	printf("============================================================================\n")
	printf("============================================================================\n")
	printf("====                      CorpusC's daily time goal                     ====\n")
	printf("============================================================================\n")
	printf("====  daysLeft: %d (includes today) \n", daysLeft)
	printf("====  hoursLeft: %f \n", hoursLeft)
	printf("====  hours needed (to work per day): %f \n", hoursLeft / i32.f32(daysLeft))
	printf("============================================================================\n")
	printf("============================================================================\n")
	printf("============================================================================\n")
}
