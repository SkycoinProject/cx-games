package draw

import "gl"
import "glfw"
import "gltext"

import "app"
import "geom"
import "menu"
import "space"



var BaseAssetDir str = "../2DFWork/draw/assets/"
var GameAssetDir str = "assets/"



func Init () {
	str.print("2DFWork/draw.Init ()")

	initGL()
	initColor()
	InitFonts()

	glfw.SetFramebufferSizeCallback(app.Name, "OnFramebufferSize", "draw")
	
	// set initial values before events are triggered 
	space.Init()
	space.ViewWidInPixels, 
	space.ViewHeiInPixels = glfw.GetFramebufferSize(app.Name)
	
	OnFramebufferSize(app.Name, 
		space.ViewWidInPixels, 
		space.ViewHeiInPixels)
}


func OnFramebufferSize (window str, wid i32, hei i32) {
	printf("    OnFramebufferSize() w,h: %d,%d \n", wid, hei)
	
	space.SetSize(wid, hei)
	menu.BakeItemText()
	//gl.Viewport(0, 0, wid, hei)
}


func BeginUntexturedQuads () {
	gl.Begin(gl.QUADS)
}
func BeginTexturedQuads (picId i32) {
	gl.BindTexture(gl.TEXTURE_2D, picId)
	gl.Begin(gl.QUADS)
}
func End () {
	gl.End()
}


// top, right, bottom, left 
func UntexturedQuad (t f32, r f32, b f32, l f32) {
	gl.Vertex2f(l, t)
	gl.Vertex2f(r, t)
	gl.Vertex2f(r, b)
	gl.Vertex2f(l, b)
}
func TexturedQuad   (t f32, r f32, b f32, l f32) {
	gl.TexCoord2d(0.0D, 0.0D)
	gl.Vertex2f(l, t)
	
	gl.TexCoord2d(1.0D, 0.0D)
	gl.Vertex2f(r, t)
	
	gl.TexCoord2d(1.0D, 1.0D)
	gl.Vertex2f(r, b)
	
	gl.TexCoord2d(0.0D, 1.0D)
	gl.Vertex2f(l, b)
}


func initGL () {
	glfw.Init()
	glfw.CreateWindow(
		app.Name, 
		app.START_WIDTH, 
		app.START_HEIGHT, 
		app.Name)
	glfw.MakeContextCurrent(app.Name)

	gl.Init()
	gl.ClearColor(0.0, 0.0, 0.0, 1.0)
	gl.BlendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)
	gl.Enable(gl.TEXTURE_2D)
	gl.Enable(gl.BLEND)
	gl.DepthMask(true) // not needed by "gltext" package 
}
