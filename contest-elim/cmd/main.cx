package main

var SMALLEST_CHOOSABLE_NUMBER i32 = 1
var LARGEST_CHOOSABLE_NUMBER i32 = 9 //50

var currentContestant i32 = 1
var prompt str = "Press [ENTER] to ROLL DICE"
var inputNumber str
var randNum i32

// lists
var eligibles []i32
var rolls     []i32

func main () {
	eligibles = []i32{}
	rolls     = []i32{}

	printTopText()
	printf("| |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  | | \n")
	printf("| |  ____________________________ Contest Elim __________________________  | | \n")
	printBottomText()

	for done() == false {

		printf("Contestant %d's chosen number? (or 'DONE') ", currentContestant)
		inputNumber = read()

		if done() == false {
			var num i32 = str.i32(inputNumber)

			eligibles = append(eligibles, num)
		}

		currentContestant++
	}


	// start elimination rounds
	str.print("\n\n\n\n ELIMINATION OF CONTESTANTS NOW BEGINS !!! \n\n")

	for len(eligibles) > 1 {
		str.print(prompt)
		var s str = read()

		randNum = getRand()
		for numberHasAlreadyBeenRolled(randNum) {
			randNum = getRand()
		}

		printf("\n\n                                ROLLED a %d \n", randNum)
		rolls = append(
		rolls, randNum)

		for i := i32.sub(len(eligibles), 1); i >= 0; i-- {
			if eligibles[i] == randNum {
				printTopText()
				printf("                                ELIMINATED CONTESTANT! \n")
				printBottomText()

				eligibles = remove(eligibles, i)
			}
		}

		if len(eligibles) > 1 {
			printf("------------------------------- (%d contestants remain) \n", len(eligibles))
		}
	}

	// show winner
	str.print("")

	for i := 0; i < 6; i++ {
		printf("                                WINNER chose # %d !!! \n", eligibles[0])
	}
}


func getRand () (out i32) {
	out = i32.rand(
		SMALLEST_CHOOSABLE_NUMBER,
		LARGEST_CHOOSABLE_NUMBER + 1)
}


func numberHasAlreadyBeenRolled (roll i32) (out bool) {
	for i := 0; i < len(rolls); i++ {
		if roll == rolls[i] {
			out = true
			break
		}
	}
}


func printTopText () {
	str.print("")
	str.print("|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|")
	str.print("| |^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^| |")
}


func printBottomText () {
	str.print("| |________________________________________________________________________| |")
	str.print("|____________________________________________________________________________|")
}


func done () (out bool) {
	if inputNumber == "Done" || inputNumber == "done" || inputNumber == "DONE" {

		out = true
	}
}
